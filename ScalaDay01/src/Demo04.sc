/**
知识点
1.scala的while用法和结构同java
2.scala通过(下标)操作集合数据。不同于java[下标]。 下标从0开始
3.scala没有++ --等操作
4.scala通用的化简规则:如果调用的方法只传一个参数,则.()可以省略
5.scala的支持将条件语句写在for条件中
6.scala提供了s函数,可以配合$以及${}针对字符串的参数进行取值
7.for yield表达式:遍历一个集合，并返回一个新集合。遍历的是什么集合类型,就返回对应的集合类型
*/
object Demo04 {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
  
  val a1=Array(1,2,3,4)                           //> a1  : Array[Int] = Array(1, 2, 3, 4)
  
  var index=0                                     //> index  : Int = 0
  
  while(index<a1.length){
  	println(a1(index))
  	index+=1
  }                                               //> 1
                                                  //| 2
                                                  //| 3
                                                  //| 4
  
  for(i<-a1)println(i)                            //> 1
                                                  //| 2
                                                  //| 3
                                                  //| 4
  
  
  //练习1:for打印出1~10的所有数字
  for(i<-1 to 10){
  	println(i)                                //> 1
                                                  //| 2
                                                  //| 3
                                                  //| 4
                                                  //| 5
                                                  //| 6
                                                  //| 7
                                                  //| 8
                                                  //| 9
                                                  //| 10
  }
  
  //练习2:for打印出1~10的所有奇数数字
  for(i<-1.to(10,2))println(i)                    //> 1
                                                  //| 3
                                                  //| 5
                                                  //| 7
                                                  //| 9
  //练习3:for打印出1~10的所有偶数数字
  for(i<-1.to(10)){
  	
  	if(i%2==0){
  		println(i)
  	}                                         //> 2
                                                  //| 4
                                                  //| 6
                                                  //| 8
                                                  //| 10
  
  }
  
  //练习4:for打印出如下的图形
  //*
  //**
  //***
  //****
  for(i<-1.to(4)){
  	println("*".*(i))                         //> *
                                                  //| **
                                                  //| ***
                                                  //| ****
  }
  
  //练习5:for打印出99乘法表,每行中,项与项之间使用制表符分割 \t
  //1*1=1
  //1*2=2 2*2=4
  //1*3=3 2*3=6 3*3=9
  for(a<-1 to 9){
  	for(b<-1 to a){
  		print(b+"*"+a+"="+b*a+"\t")
  	 
  	}
  	println()
  
  }                                               //> 1*1=1	
                                                  //| 1*2=2	2*2=4	
                                                  //| 1*3=3	2*3=6	3*3=9	
                                                  //| 1*4=4	2*4=8	3*4=12	4*4=16	
                                                  //| 1*5=5	2*5=10	3*5=15	4*5=20	5*5=25	
                                                  //| 1*6=6	2*6=12	3*6=18	4*6=24	5*6=30	6*6=36	
                                                  //| 1*7=7	2*7=14	3*7=21	4*7=28	5*7=35	6*7=42	7*7=49	
                                                  //| 1*8=8	2*8=16	3*8=24	4*8=32	5*8=40	6*8=48	7*8=56	8*8=64	
                                                  //| 1*9=9	2*9=18	3*9=27	4*9=36	5*9=45	6*9=54	7*9=63	8*9=72	9*9=81	
                                                  //| 
  //练习6:for打印出1~10中大于5的偶数数据
  for(i<-1 to 10){
  	if(i>5&&i%2==0){
  		println(i)
  	}                                         //> 6
                                                  //| 8
                                                  //| 10
  }
  //scala的支持将条件语句写在for条件中
  for(i<-1 to 10;if i>5&&i%2==0)println(i)        //> 6
                                                  //| 8
                                                  //| 10
  
  
  for(i<-1 to 10;if i>5;if i%2==0)println(i)      //> 6
                                                  //| 8
                                                  //| 10
  //scala提供了s函数,可以配合$以及${}针对字符串的参数进行取值
  for(a<-1 to 9;b<-1 to a;val sep=if(a==b)"\r\n" else "\t"){
  	print(s"$b*$a=${b*a}$sep")                //> 1*1=1
                                                  //| 1*2=2	2*2=4
                                                  //| 1*3=3	2*3=6	3*3=9
                                                  //| 1*4=4	2*4=8	3*4=12	4*4=16
                                                  //| 1*5=5	2*5=10	3*5=15	4*5=20	5*5=25
                                                  //| 1*6=6	2*6=12	3*6=18	4*6=24	5*6=30	6*6=36
                                                  //| 1*7=7	2*7=14	3*7=21	4*7=28	5*7=35	6*7=42	7*7=49
                                                  //| 1*8=8	2*8=16	3*8=24	4*8=32	5*8=40	6*8=48	7*8=56	8*8=64
                                                  //| 1*9=9	2*9=18	3*9=27	4*9=36	5*9=45	6*9=54	7*9=63	8*9=72	9*9=81
  }
  //for遍历a2,将a2中大于3的数据拿出来,返回到新的数组中
  val a2=Array(1,2,3,4,5,6)                       //> a2  : Array[Int] = Array(1, 2, 3, 4, 5, 6)
  
  //for yield表达式:遍历一个集合，并返回一个新集合
  //遍历的是什么集合类型,就返回对应的集合类型
  val a3=for(i<-a2;if i>3)yield{i}                //> a3  : Array[Int] = Array(4, 5, 6)
  
  val l1=List(1,2,3,4)                            //> l1  : List[Int] = List(1, 2, 3, 4)
  
  val l2=for(i<-l1)yield{i}                       //> l2  : List[Int] = List(1, 2, 3, 4)
}